// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gardener/gardener/pkg/apis/extensions/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WorkerPoolLister helps list WorkerPools.
type WorkerPoolLister interface {
	// List lists all WorkerPools in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WorkerPool, err error)
	// WorkerPools returns an object that can list and get WorkerPools.
	WorkerPools(namespace string) WorkerPoolNamespaceLister
	WorkerPoolListerExpansion
}

// workerPoolLister implements the WorkerPoolLister interface.
type workerPoolLister struct {
	indexer cache.Indexer
}

// NewWorkerPoolLister returns a new WorkerPoolLister.
func NewWorkerPoolLister(indexer cache.Indexer) WorkerPoolLister {
	return &workerPoolLister{indexer: indexer}
}

// List lists all WorkerPools in the indexer.
func (s *workerPoolLister) List(selector labels.Selector) (ret []*v1alpha1.WorkerPool, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkerPool))
	})
	return ret, err
}

// WorkerPools returns an object that can list and get WorkerPools.
func (s *workerPoolLister) WorkerPools(namespace string) WorkerPoolNamespaceLister {
	return workerPoolNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WorkerPoolNamespaceLister helps list and get WorkerPools.
type WorkerPoolNamespaceLister interface {
	// List lists all WorkerPools in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WorkerPool, err error)
	// Get retrieves the WorkerPool from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WorkerPool, error)
	WorkerPoolNamespaceListerExpansion
}

// workerPoolNamespaceLister implements the WorkerPoolNamespaceLister
// interface.
type workerPoolNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WorkerPools in the indexer for a given namespace.
func (s workerPoolNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WorkerPool, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkerPool))
	})
	return ret, err
}

// Get retrieves the WorkerPool from the indexer for a given namespace and name.
func (s workerPoolNamespaceLister) Get(name string) (*v1alpha1.WorkerPool, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("workerpool"), name)
	}
	return obj.(*v1alpha1.WorkerPool), nil
}
